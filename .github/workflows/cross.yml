name: Cross YTGet

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      APP_NAME: YTGet
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: python -m pip install --upgrade pip && pip install -r requirements.txt pyinstaller
      - run: curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -o yt-dlp.exe
      - run: |
          curl -L https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip -o ffmpeg.zip
          tar -xf ffmpeg.zip
          $f = Get-ChildItem -Recurse -Filter ffmpeg.exe | Select-Object -First 1
          $p = Get-ChildItem -Recurse -Filter ffprobe.exe | Select-Object -First 1
          Copy-Item $f.FullName .
          Copy-Item $p.FullName .
        shell: pwsh
      - run: rm -rf build dist *.spec
        shell: bash
      - run: |
          pyinstaller --noconfirm --onedir --windowed \
            --icon=icon.ico --name="$APP_NAME" --clean --noupx \
            --version-file=version_info.txt \
            --hidden-import=PySide6.QtCore --hidden-import=PySide6.QtGui \
            --hidden-import=PySide6.QtWidgets --hidden-import=requests \
            --hidden-import=mutagen --hidden-import=PIL --hidden-import=webbrowser \
            --hidden-import=mutagen.id3 --hidden-import=mutagen.flac \
            --add-data="__init__.py;." --add-data="__main__.py;." \
            --add-data="ffmpeg.exe;." --add-data="ffprobe.exe;." \
            --add-data="icon.ico;." --add-data="LICENSE;." \
            --add-data="main_window.py;." --add-data="README.md;." \
            --add-data="RELEASE_NOTES.md;." --add-data="settings.py;." \
            --add-data="styles.py;." --add-data="yt-dlp.exe;." \
            --add-data="dialogs;dialogs/" --add-data="utils;utils/" \
            --add-data="widgets;widgets/" --add-data="workers;workers/" \
            main.py
        shell: bash
      - run: pwsh -c "Compress-Archive -Path dist/${env:APP_NAME}/* -DestinationPath ${env:APP_NAME}-windows-x86_64.zip -CompressionLevel Optimal"
      - run: pwsh -c "\$h = Get-FileHash -Algorithm SHA256 YTGet-windows-x86_64.zip; \"\$($h.Hash)  YTGet-windows-x86_64.zip\" | Out-File -Encoding ASCII -NoNewline YTGet-windows-x86_64.zip.sha256"
      - uses: actions/upload-artifact@v4
        with:
          name: YTGet-windows-x86_64
          path: |
            YTGet-windows-x86_64.zip
            YTGet-windows-x86_64.zip.sha256

  build-linux:
    runs-on: ubuntu-latest
    env:
      APP_NAME: YTGet
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: sudo apt-get update && sudo apt-get install -y ffmpeg
      - run: python -m pip install --upgrade pip && pip install -r requirements.txt pyinstaller
      - run: curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp && chmod +x yt-dlp
      - run: rm -rf build dist *.spec
      - run: |
          pyinstaller --noconfirm --onedir --windowed \
            --icon=icon.ico --name="$APP_NAME" --clean --noupx \
            --version-file=version_info.txt \
            --hidden-import=PySide6.QtCore --hidden-import=PySide6.QtGui \
            --hidden-import=PySide6.QtWidgets --hidden-import=requests \
            --hidden-import=mutagen --hidden-import=PIL --hidden-import=webbrowser \
            --hidden-import=mutagen.id3 --hidden-import=mutagen.flac \
            --add-data="__init__.py:." --add-data="__main__.py:." \
            --add-data="ffmpeg:." --add-data="ffprobe:." \
            --add-data="icon.ico:." --add-data="LICENSE:." \
            --add-data="main_window.py:." --add-data="README.md:." \
            --add-data="RELEASE_NOTES.md:." --add-data="settings.py:." \
            --add-data="styles.py:." --add-data="yt-dlp:." \
            --add-data="dialogs:dialogs/" --add-data="utils:utils/" \
            --add-data="widgets:widgets/" --add-data="workers:workers/" \
            main.py
      - run: tar -czvf YTGet-linux-x86_64.tar.gz -C dist/YTGet .
      - run: sha256sum YTGet-linux-x86_64.tar.gz > YTGet-linux-x86_64.tar.gz.sha256
      - uses: actions/upload-artifact@v4
        with:
          name: YTGet-linux-x86_64
          path: |
            YTGet-linux-x86_64.tar.gz
            YTGet-linux-x86_64.tar.gz.sha256

  build-macos-arm64:
    runs-on: macos-latest
    env:
      APP_NAME: YTGet
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: brew update && brew install ffmpeg
      - run: python -m pip install --upgrade pip && pip install -r requirements.txt pyinstaller
      - run: curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp && chmod +x yt-dlp
      - run: rm -rf build dist *.spec
      - run: |
          pyinstaller --noconfirm --onedir --windowed \
            --icon=icon.ico --name="$APP_NAME" --clean --noupx \
            --version-file=version_info.txt \
            --hidden-import=PySide6.QtCore --hidden-import=PySide6.QtGui \
            --hidden-import=PySide6.QtWidgets --hidden-import=requests \
            --hidden-import=mutagen --hidden-import=PIL --hidden-import=webbrowser \
            --hidden-import=mutagen.id3 --hidden-import=mutagen.flac \
            --add-data="__init__.py:." --add-data="__main__.py:." \
            --add-data="ffmpeg:." --add-data="ffprobe:." \
            --add-data="icon.ico:." --add-data="LICENSE:." \
            --add-data="main_window.py:." --add-data="README.md:." \
            --add-data="RELEASE_NOTES.md:." --add-data="settings.py:." \
            --add-data="styles.py:." --add-data="yt-dlp:." \
            --add-data="dialogs:dialogs/" --add-data="utils:utils/" \
            --add-data="widgets:widgets/" --add-data="workers:workers/" \
            main.py
      - run: tar -czvf YTGet-macos-arm64.tar.gz -C dist/YTGet .
      - run: shasum -a 256 YTGet-macos-arm64.tar.gz > YTGet-macos-arm64.tar.gz.sha256
      - uses: actions/upload-artifact@v4
        with:
          name: YTGet-macos-arm64
          path: |
            YTGet-macos-arm64.tar.gz
            YTGet-macos-arm64.tar.gz.sha256

  build-macos-x86_64:
    runs-on: macos-13
    env:
      APP_NAME: YTGet
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: brew update && brew install ffmpeg
      - run: python -m pip install --upgrade pip && pip install -r requirements.txt pyinstaller
      - run: curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp && chmod +x yt-dlp
      - run: rm -rf build dist *.spec
      - run: |
          pyinstaller --noconfirm --onedir --windowed \
            --icon=icon.ico --name="$APP_NAME" --clean --noupx \
            --version-file=version_info.txt \
            --hidden-import=PySide6.QtCore --hidden-import=PySide6.QtGui \
            --hidden-import=PySide6.QtWidgets --hidden-import=requests \
            --hidden-import=mutagen --hidden-import=PIL --hidden-import=webbrowser \
            --hidden-import=mutagen.id3 --hidden-import=mutagen.flac \
            --add-data="__init__.py:." --add-data="__main__.py:." \
            --add-data="ffmpeg:." --add-data="ffprobe:." \
            --add-data="icon.ico:." --add-data="LICENSE:." \
            --add-data="main_window.py:." --add-data="README.md:." \
            --add-data="RELEASE_NOTES.md:." --add-data="settings.py:." \
            --add-data="styles.py:." --add-data="yt-dlp:." \
            --add-data="dialogs:dialogs/" --add-data="utils:utils/" \
            --add-data="widgets:widgets/" --add-data="workers:workers/" \
            main.py
      - run: tar -czvf ${APP_NAME}-macos-x86_64.tar.gz -C dist/${APP_NAME} .
      - run: shasum -a 256 ${APP_NAME}-macos-x86_64.tar.gz > ${APP_NAME}-macos-x86_64.tar.gz.sha256
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macos-x86_64
          path: |
            ${{ env.APP_NAME }}-macos-x86_64.tar.gz
            ${{ env.APP_NAME }}-macos-x86_64.tar.gz.sha256
