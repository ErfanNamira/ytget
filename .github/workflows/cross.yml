name: Cross YTGet

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up latest Python 3
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    # Download yt-dlp
    - name: Download latest yt-dlp
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -o yt-dlp.exe
        else
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp
          chmod +x yt-dlp
        fi
      shell: bash

    # Download ffmpeg & ffprobe
    - name: Download ffmpeg & ffprobe
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          curl -L https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip -o ffmpeg.zip
          tar -xf ffmpeg.zip
          ffmpegPath=$(find . -name ffmpeg.exe | head -n 1)
          ffprobePath=$(find . -name ffprobe.exe | head -n 1)
          cp "$ffmpegPath" .
          cp "$ffprobePath" .
        elif [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          cp "$(which ffmpeg)" .
          cp "$(which ffprobe)" .
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          brew install ffmpeg
          cp "$(which ffmpeg)" .
          cp "$(which ffprobe)" .
        fi
      shell: bash

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --onedir --windowed \
          --icon "icon.ico" \
          --name "YTGet" \
          --clean --noupx \
          --version-file "version_info.txt" \
          --hidden-import "PySide6.QtCore" \
          --hidden-import "PySide6.QtGui" \
          --hidden-import "PySide6.QtWidgets" \
          --hidden-import "requests" \
          --hidden-import "mutagen" \
          --hidden-import "PIL" \
          --hidden-import "webbrowser" \
          --hidden-import "mutagen.id3" \
          --hidden-import "mutagen.flac" \
          --add-data "__init__.py:." \
          --add-data "__main__.py:." \
          --add-data "ffmpeg*:. " \
          --add-data "ffprobe*:. " \
          --add-data "icon.ico:." \
          --add-data "LICENSE:." \
          --add-data "main_window.py:." \
          --add-data "README.md:." \
          --add-data "RELEASE_NOTES.md:." \
          --add-data "settings.py:." \
          --add-data "styles.py:." \
          --add-data "yt-dlp*:." \
          --add-data "dialogs:dialogs/" \
          --add-data "utils:utils/" \
          --add-data "widgets:widgets/" \
          --add-data "workers:workers/" \
          "main.py"
      shell: bash

    - name: Zip build
      run: |
        cd dist
        zip -r ../YTGet-${{ matrix.os }}.zip YTGet
      shell: bash

    - name: Generate SHA-256 checksum
      run: |
        shasum -a 256 YTGet-${{ matrix.os }}.zip > YTGet-${{ matrix.os }}.zip.sha256
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: YTGet-build-${{ matrix.os }}
        path: |
          dist/YTGet
          YTGet-${{ matrix.os }}.zip
          YTGet-${{ matrix.os }}.zip.sha256
        retention-days: 14